# Remove old credential if it exists
# Temporary because the module seems to create a new credential each time
- name: Remove Red Hat Container Registry credential
  awx.awx.credential:
    name: "{{ credentials.redhat_registry.name }}"
    credential_type: "{{ credentials.redhat_registry.type }}"
    controller_username: "{{ controller_username }}"
    controller_password: "{{ controller_password }}"
    validate_certs: no
    state: absent
  ignore_errors: yes

- name: Add Red Hat Container Registry credential
  awx.awx.credential:
    name: "{{ credentials.redhat_registry.name }}"
    description: "{{ credentials.redhat_registry.description }}"
    organization: "{{ organization }}"
    credential_type: "{{ credentials.redhat_registry.type }}"
    inputs:
      host: "{{ credentials.redhat_registry.inputs.host }}"
      username: "{{ credentials.redhat_registry.inputs.username }}"
      password: "{{ credentials.redhat_registry.inputs.password }}"
    validate_certs: no
    controller_username: "{{ controller_username }}"
    controller_password: "{{ controller_password }}"
    state: present
#    tower_config_file: "~/tower_cli.cfg"

# Remove old credential if it exists
# Temporary because the module seems to create a new credential each time
- name: Remove GitHub SCM credential
  awx.awx.credential:
    name: "{{ credentials.scm.name }}"
    credential_type: "{{ credentials.scm.type }}"
    controller_username: "{{ controller_username }}"
    controller_password: "{{ controller_password }}"
    validate_certs: no
    state: absent
  ignore_errors: yes

- name: Add GitHub SCM credential
  awx.awx.credential:
    name: "{{ credentials.scm.name }}"
    description: "{{ credentials.scm.description }}"
    organization: "{{ organization }}"
    credential_type: "{{ credentials.scm.type }}"
    inputs:
      username: "{{ credentials.scm.inputs.username }}"
      password: "{{ credentials.scm.inputs.password }}"
    validate_certs: no
    controller_username: "{{ controller_username }}"
    controller_password: "{{ controller_password }}"
    state: present
#    tower_config_file: "~/tower_cli.cfg"